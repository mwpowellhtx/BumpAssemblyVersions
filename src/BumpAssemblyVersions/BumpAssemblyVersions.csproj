<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Authors>Michael W. Powell</Authors>
    <Company>Kingdom Software</Company>
    <Copyright>Copyright © 2018</Copyright>
  </PropertyGroup>

  <PropertyGroup>
    <RootNamespace>Bav</RootNamespace>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup>
    <BuildOutputTargetFolder>tasks</BuildOutputTargetFolder>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <DevelopmentDependency>true</DevelopmentDependency>
  </PropertyGroup>

  <PropertyGroup>
    <Title>BumpAssemblyVersions</Title>
    <AssemblyVersion>1.2.0</AssemblyVersion>
    <FileVersion>1.2.0</FileVersion>
    <PackageVersion>1.2.0</PackageVersion>
    <Description>Bumps assembly versions according to user provided specifications.</Description>
    <IsTool>true</IsTool>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>BumpAssemblyVersions</PackageId>
    <PackageProjectUrl>http://github.com/mwpowellhtx/BumpAssemblyVersions</PackageProjectUrl>
    <PackageLicenseUrl>http://github.com/mwpowellhtx/BumpAssemblyVersions/LICENSE</PackageLicenseUrl>
    <PackageDescription>$(Description)</PackageDescription>
    <PackageTags>version; versions; assembly; assemblies; bump; bumps; bumped; nuget; restore; restored; msbuild; provider; registry; may; should; reset; use; utc; universal; coordinated; time; stamp; timestamp; label; value; width; discard; create; new; include; wildcard; default; kind; file; files; informational; package; spec; specification; specifications; targets; template; major; minor; patch; build; release; prerelease; element; elements; import; item; group; more; significant; change; changed</PackageTags>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>bin\Debug\netstandard2.0\BumpAssemblyVersions.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\Release\netstandard2.0\BumpAssemblyVersions.xml</DocumentationFile>
  </PropertyGroup>

  <!-- TODO: TBD: Microsoft.Build.* is not compatible with netstandard1.6 / https://github.com/Microsoft/msbuild/issues/3435 -->
  <ItemGroup>
    <PackageReference Include="Microsoft.Build" Version="15.7.179" />
    <PackageReference Include="Microsoft.Build.Engine" Version="15.7.179" />
    <PackageReference Include="Microsoft.Build.Framework" Version="15.7.179" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.7.179" />
    <PackageReference Include="Microsoft.CSharp" Version="4.5.0" />
    <PackageReference Include="Microsoft.VisualStudio.SlowCheetah" Version="3.1.66">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
    <PackageReference Include="NuGet.Versioning" Version="4.6.2" />
    <PackageReference Include="System.Xml.XDocument" Version="4.3.0" />
    <PackageReference Include="System.Xml.XPath.XDocument" Version="4.3.0" />
    <PackageReference Update="@(PackageReference)" PrivateAssets="All" />
  </ItemGroup>

  <!-- TODO: TBD: ditto multi-targeting; (not yet) -->
  <ItemGroup>
    <Compile Update="BumpVersionTask.Input.cs">
      <DependentUpon>BumpVersionTask.cs</DependentUpon>
    </Compile>
    <Compile Update="BumpVersionTask.Output.cs">
      <DependentUpon>BumpVersionTask.cs</DependentUpon>
    </Compile>
    <Compile Update="BumpVersionDescriptor.Protected.cs">
      <DependentUpon>BumpVersionDescriptor.cs</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Update="build\BumpAssemblyVersions.Debug.props">
      <IsTransformFile>true</IsTransformFile>
      <DependentUpon>BumpAssemblyVersions.props</DependentUpon>
    </None>
    <None Update="build\BumpAssemblyVersions.Debug.targets">
      <IsTransformFile>true</IsTransformFile>
      <DependentUpon>BumpAssemblyVersions.targets</DependentUpon>
    </None>
    <None Update="build\BumpAssemblyVersions.props">
      <TransformOnBuild>true</TransformOnBuild>
    </None>
    <None Update="build\BumpAssemblyVersions.Release.props">
      <IsTransformFile>true</IsTransformFile>
      <DependentUpon>BumpAssemblyVersions.props</DependentUpon>
    </None>
    <None Update="build\BumpAssemblyVersions.Release.targets">
      <IsTransformFile>true</IsTransformFile>
      <DependentUpon>BumpAssemblyVersions.targets</DependentUpon>
    </None>
    <None Update="build\BumpAssemblyVersions.targets">
      <TransformOnBuild>true</TransformOnBuild>
    </None>
  </ItemGroup>

  <Target Name="PackTaskDependencies" AfterTargets="Build" BeforeTargets="GenerateNuspec">

    <!-- The include needs to happen after output has been copied to build
    output folder but before NuGet generates a nuspec. -->

     <ItemGroup>
       <_PackageFiles Include="bin\$(Configuration)\$(TargetFramework)\*.*">
         <PackagePath>tasks\$(TargetFramework)\%(RecursiveDir)</PackagePath>
         <Visible>false</Visible>
         <BuildAction>Content</BuildAction>
       </_PackageFiles>
       <!-- This is a perfectly adequate workaround for the Content v SlowCheetah
       transformation confusion. Although these are "content", we do not let MSBuild/NuGet
       consider them Content in the Contentiness way of considering them as such. Rather,
       let SC do its work, then capture them afterwards prior to the GenerateNuspec task. -->
       <_PackageFiles Include="bin\$(Configuration)\$(TargetFramework)\build\*.*">
         <PackagePath>build\%(RecursiveDir)</PackagePath>
         <Visible>false</Visible>
         <BuildAction>Content</BuildAction>
       </_PackageFiles>
    </ItemGroup>
  </Target>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="if exist &quot;bin\$(ConfigurationName)\*.nupkg&quot; del &quot;bin\$(ConfigurationName)\*.nupkg&quot;" />
  </Target>

</Project>
