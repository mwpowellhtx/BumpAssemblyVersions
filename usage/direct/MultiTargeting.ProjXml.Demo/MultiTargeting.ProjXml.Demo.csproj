<Project Sdk="Microsoft.NET.Sdk">

    <!-- "CreateNew" does in fact work. This is what results.
      We could potentially inject some whitespace, but this is perfectly fine for now. -->
    <PropertyGroup>
        <PackageVersion>2024.162.2029.0</PackageVersion>
        <InformationalVersion>2024.162.2029.0</InformationalVersion>
        <FileVersion>2024.162.2029.0</FileVersion>
        <AssemblyVersion>2024.162.2029.0</AssemblyVersion>
        <Version>2024.162.2029.0</Version>
    </PropertyGroup>

    <!-- Multi-targeting sample use case. -->
    <PropertyGroup>
        <TargetFrameworks>netcoreapp3.1;net8.0</TargetFrameworks>
    </PropertyGroup>

    <ImportGroup>
        <Import Project="..\Default.Usage.NoBumpSpecs.props" />
    </ImportGroup>

    <!-- Conditioned based on $(TargetFramework), similar as with the NuGet single/multi-targeting scenarios.
        At the moment, this is the best/only way we know of in order to reliably convey version specs in the
        desired mode. Which has the effect of not running any bumps against that particular target.
        -->
    <ItemGroup Condition="'$(TargetFramework)' == ''">
        <!-- Legit, "Year" will, in fact, yield two or more such providers. This is by design
          in order to avoid errant provider references, and I now call it out by name when it
          happens. Need to specify something more than that, like "YearVersion". -->
        <BumpVersionSpec Include="Version" DefaultVersion="0.0.0.0" CreateNew="true" UseUtc="true" MayReset="true" MajorProviderTemplate="YearVersion" MinorProviderTemplate="DayOfYear" PatchProviderTemplate="HourMinute" BuildProviderTemplate="Increment" />
        <!-- Additionally, "MayReset" now is be applicable in a provider agnostic manner.
          Documentation in the README is already up to date with this design decision. -->
        <BumpVersionSpec Include="AssemblyVersion" DefaultVersion="0.0.0.0" CreateNew="true" UseUtc="true" MayReset="true" MajorProviderTemplate="YearVersion" MinorProviderTemplate="DayOfYear" PatchProviderTemplate="HourMinute" BuildProviderTemplate="Increment" />
        <BumpVersionSpec Include="FileVersion" DefaultVersion="0.0.0.0" CreateNew="true" UseUtc="true" MayReset="true" MajorProviderTemplate="YearVersion" MinorProviderTemplate="DayOfYear" PatchProviderTemplate="HourMinute" BuildProviderTemplate="Increment" />
        <BumpVersionSpec Include="InformationalVersion" DefaultVersion="0.0.0.0" CreateNew="true" UseUtc="true" MayReset="true" MajorProviderTemplate="YearVersion" MinorProviderTemplate="DayOfYear" PatchProviderTemplate="HourMinute" BuildProviderTemplate="Increment" />
        <BumpVersionSpec Include="PackageVersion" DefaultVersion="0.0.0.0" CreateNew="true" UseUtc="true" MayReset="true" MajorProviderTemplate="YearVersion" MinorProviderTemplate="DayOfYear" PatchProviderTemplate="HourMinute" BuildProviderTemplate="Increment" />
    </ItemGroup>

    <Target Name="ReportAfterBuild" AfterTargets="Build">
        <Message Importance="high" Text="Target framework: '$(TargetFramework)', specs: @(BumpVersionSpec-&gt;Count())" />
    </Target>

    <ImportGroup>
        <Import Project="..\Test.Hypotheses.props" />
    </ImportGroup>

</Project>
